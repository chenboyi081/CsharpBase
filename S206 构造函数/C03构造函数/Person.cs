using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace C03构造函数
{
    class Person
    {
        public string Name { get; set; }
        public int Age { get; set; }


        private bool gender;
        public string Gender
        {
            get { return gender ? "男" : "女"; }
            set { gender = value == "男" ? true : false; }
        }
        public Person(string name,int age) 
        {
            this.Name = name;
            this.Age = age;
        }
        public Person(string name, int age,string gender)
            :this(name,age)  
        { 
            this.Gender = gender;
        } 
       


        

        /* 1. 构造方法: 是1个比较特殊的方法.
         *    构造函数
         * 
         * 2. 语法:
         *    a. 访问修饰符一般情况下是public
         *    b. 构造方法没有返回值. 连void都不要写.
         *    c. 构造方法的名称与所在的类的名字相同
         * 
         * 3. 构造方法不能被程序员手动的调用.
         * 
         * 4. 在创建对象的时候,new关键字做的事情.
         *    a. 在堆内存中开辟合适大小的空间
         *    b. 在这个空间中根据类的模板创建对象
         *    c. 调用这个对象的构造函数
         *    d. 返回这个对象的引用地址
         *    
         * 5. 构造函数的执行的时机:
         *    a. 构造函数不能被程序员手动的调用.
         *    b. 构造函数在创建对象的时候被new关键字自动调用.
         * 
         * 6. 类的成员:
         *    a. 字段
         *    b. 方法
         *    c. 属性
         *    d. 构造函数.
         *     
         *    构造函数是类的成员之一, 构造函数要写在类中. 构造函数的名称要和所在的类的名称相同.
         *    
         * 7. 在创建对象的时候,一定要去调用构造函数来完成创建对象.
         *    不可能不调用.
         *    
         * 8. 构造函数是1个特殊的方法
         *    a. 语法特殊
         *    b. 执行时机特殊
         *    
         *    构造函数可以带参数.
         *      如果构造函数带了参数,那么在创建对象的时候,就必须要为这个构造函数的参数 传参.
         *      将要传递给构造函数的参数写在new的小括弧中.
         *    构造函数可以重载.
         *      1个类中可以有多个构造函数.如果这样的话.
         *      那么在创建对象的时候. 调用任意的1个构造函数来创建对象都是可以的.
         *      通过参数去匹配想要调用的构造函数.
         *      
         * 9. 构造函数的作用?
         *    a. 最大的特点: 是在创建对象的同时 自动执行.
         *    b. 如果有1段代码,我希望在创建对象的同时就自动执行,那么我们就可以把这段代码写在构造函数中.
         *       但是:
         *          建议不要在构造函数中写1些比较耗时并且消耗性能的代码.
         *          
         *       一般情况下,程序员使用构造函数来让对象的创建者必须初始化对象的属性.
         *       
         * 10. 如果 软件工程师 没有为类写任意的构造函数. 那么这个时候C#编译器在编译的时候
         *     会自动的为这个生成1个无参数的空方法体的 构造函数.
         *     所以,这个时候我们才可以调用无参数的构造函数来创建对象.
         *     C#编译器自动生成的这个无参数的构造函数 叫做 隐式构造函数.
         *     
         *     一旦我们为类写了1个构造函数以后,那么C#编译器就不会再自动生成那个隐式的构造函数了.
         *     如果我们就是要调用那个无参数的构造函数m 那么自己写1个就可以了.
         * 
         * 
         * 11. 构造函数不能再普通的方法中调用,但是普通的方法是可以在构造函数中调用的. 
         *     构造函数之间是可以相互调用的.
         *     语法:
         *     eg: 在A构造函数 调用B构造函数.
         *     A():this(通过参数匹配B构造函数的参数)
         *     {
         *       
         *     }
         *     执行的顺序:  A构造函数调用了B构造函数 而创建对象的时候是调用A构造函数
         *     a. 先调用A构造函数.
         *     b. 再调用B构造函数
         *     c. 再执行B构造函数
         *     d. 最后执行A构造函数.
         *     
         * 
         *     一般情况下,我们通过这种方式调用别的构造函数来为属性赋值.
         *     
         * 
         */

        public void SayHi()
        {

            Console.WriteLine("大家好,我叫{0},我今年{1}岁,我是{2}的",
                this.Name, this.Age, this.Gender);
        }


    }
}
